@model _540FinalProject.Models.CLIENT

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <h4>CLIENT</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.FnameClient, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FnameClient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FnameClient, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MnameClient, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MnameClient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MnameClient, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LnameClient, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LnameClient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LnameClient, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneClient, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneClient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneClient, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CelClient, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CelClient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CelClient, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StreetClient, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StreetClient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StreetClient, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CountyClient, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CountyClient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CountyClient, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ZipCodeClient, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ZipCodeClient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ZipCodeClient, "", new { @class = "text-danger" })
        </div>
    </div>
    <!--
            <div class="form-group">
                "PutAtSymbolHere"Html.LabelFor(model => model.EmailClient, htmlAttributes: new { "PutAtSymbolHere"class = "control-label col-md-2" })
                <div class="col-md-10">
                    "PutAtSymbolHere"{
                        String email = ViewData["Email"] as String;
                        String userId = ViewData["UserID"] as String;
                     }

                    "PutAtSymbolHere"Html.EditorFor(model => model.EmailClient, new { htmlAttributes = new { "PutAtSymbolHere"class = "form-control" } })
                    "PutAtSymbolHere"Html.ValidationMessageFor(model => model.EmailClient, "", new { "PutAtSymbolHere"class = "text-danger" })
                </div>
            </div>
    -->
    <div class="form-group">
        @Html.LabelFor(model => model.StateClient, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StateClient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StateClient, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
